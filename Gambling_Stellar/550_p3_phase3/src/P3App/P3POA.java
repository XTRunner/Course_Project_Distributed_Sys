package P3App;


/**
* P3App/P3POA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from P3.idl
* Sunday, April 21, 2019 12:08:30 AM CDT
*/

public abstract class P3POA extends org.omg.PortableServer.Servant
 implements P3App.P3Operations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("reg_account", new java.lang.Integer (0));
    _methods.put ("login_account", new java.lang.Integer (1));
    _methods.put ("login_bank", new java.lang.Integer (2));
    _methods.put ("check_before_gamble", new java.lang.Integer (3));
    _methods.put ("start_gamble", new java.lang.Integer (4));
    _methods.put ("start_timer", new java.lang.Integer (5));
    _methods.put ("check_active_gamble", new java.lang.Integer (6));
    _methods.put ("put_bet", new java.lang.Integer (7));
    _methods.put ("verify_hash", new java.lang.Integer (8));
    _methods.put ("player_query_transac", new java.lang.Integer (9));
    _methods.put ("banker_query_transac", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  // register
       case 0:  // P3App/P3/reg_account
       {
         String $result = null;
         $result = this.reg_account ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  // Login
       case 1:  // P3App/P3/login_account
       {
         String seed = in.read_string ();
         P3App.P3CallBack objref = P3App.P3CallBackHelper.read (in);
         String $result = null;
         $result = this.login_account (seed, objref);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // P3App/P3/login_bank
       {
         String seed = in.read_string ();
         boolean $result = false;
         $result = this.login_bank (seed);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  // Banker start gambling
       case 3:  // P3App/P3/check_before_gamble
       {
         boolean $result = false;
         $result = this.check_before_gamble ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // P3App/P3/start_gamble
       {
         String deadline = in.read_string ();
         boolean $result = false;
         $result = this.start_gamble (deadline);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 5:  // P3App/P3/start_timer
       {
         String deadline = in.read_string ();
         this.start_timer (deadline);
         out = $rh.createReply();
         break;
       }


  // Partitioner check if active gambling
       case 6:  // P3App/P3/check_active_gamble
       {
         String $result = null;
         $result = this.check_active_gamble ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  // Partitioner put bet
       case 7:  // P3App/P3/put_bet
       {
         String seed = in.read_string ();
         int bet = in.read_long ();
         String hash_value = in.read_string ();
         String $result = null;
         $result = this.put_bet (seed, bet, hash_value);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  // Verify hash_value
       case 8:  // P3App/P3/verify_hash
       {
         String seed = in.read_string ();
         String ran_num = in.read_string ();
         boolean $result = false;
         $result = this.verify_hash (seed, ran_num);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // P3App/P3/player_query_transac
       {
         String $result = null;
         $result = this.player_query_transac ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 10:  // P3App/P3/banker_query_transac
       {
         String seed = in.read_string ();
         String $result = null;
         $result = this.banker_query_transac (seed);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:P3App/P3:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public P3 _this() 
  {
    return P3Helper.narrow(
    super._this_object());
  }

  public P3 _this(org.omg.CORBA.ORB orb) 
  {
    return P3Helper.narrow(
    super._this_object(orb));
  }


} // class P3POA
